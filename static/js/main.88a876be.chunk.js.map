{"version":3,"sources":["helpers/_generate-context.jsx","helpers/_encode-filters.jsx","modules/filters/filters-actions.jsx","modules/filters/filters-context.jsx","config/_config.jsx","modules/history/history-actions.jsx","modules/history/history-context.jsx","modules/filters/views/filters.jsx","modules/history/views/history-list.jsx","App.jsx","serviceWorker.js","index.js"],"names":["generateContext","initialState","reducer","Context","React","createContext","ContextProvider","children","localReducer","localState","useReducer","state","dispatch","Provider","value","encodeFilters","filters","query","_","map","filter","group","name","checked","getFilters","a","filtersContext","data","touched","newFilters","Object","create","type","providerName","cloudAccount","undefined","count","console","log","payload","Error","get","changeFilters","fetchFunction","err","changeAllFilters","item","loading","error","action","FiltersContext","FiltersContextProvider","API_URL","getHistory","historyContext","Axios","url","method","response","deleteHistory","id","history","newHistory","deleted","HistoryContext","HistoryContextProvider","useStyles","makeStyles","theme","heading","fontSize","typography","pxToRem","alignSelf","groupCheckbox","marginLeft","groupExpansion","flexDirection","toggleButton","width","searchField","margin","filterProvider","filterAccount","Filters","useState","expanded","setExpanded","useContext","useEffect","handleExpansion","panel","event","isExpanded","ExpansionPanel","onChange","FilterGroup","groupName","maxFilters","withSearch","classes","limit","setLimit","filtersGroup","setFiltersGroup","allChecked","ExpansionPanelSummary","expandIcon","Icon","Typography","className","FormControlLabel","onClick","stopPropagation","onFocus","isChecked","control","Checkbox","label","size","ExpansionPanelDetails","TextField","variant","searchFor","pickBy","elem","includes","toLowerCase","values","slice","key","FilterItem","Button","HistoryList","Table","aria-label","TableHead","TableRow","TableCell","TableBody","Avatar","src","picture","region","result","runBy","createdAt","finishedAt","IconButton","color","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88a876be.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport function generateContext(initialState, reducer) {\r\n  const Context = React.createContext(initialState)\r\n  const ContextProvider = ({ children }) => {\r\n    const localReducer = reducer\r\n    const localState =initialState\r\n    const [state, dispatch] = React.useReducer(localReducer, localState)\r\n    return <Context.Provider value={{ ...state, dispatch }}>{children}</Context.Provider>\r\n  }\r\n  return { Context, ContextProvider }\r\n}\r\n","import _ from 'lodash'\r\n\r\nexport const encodeFilters = filters => {\r\n  let query = ''\r\n  _.map(filters, filter => {\r\n    _.map(\r\n      filter,\r\n      ({ group, name, checked }) => (query += checked ? `${group}=${name}&` : '')\r\n    )\r\n  })\r\n  return query\r\n}\r\n","import _ from 'lodash'\r\n\r\nexport const GET_FILTERS = 'GET_FILTERS'\r\nexport const GET_FILTERS_SUCCESS = 'GET_FILTERS_SUCCESS'\r\nexport const GET_FILTERS_FAIL = 'GET_FILTERS_FAIL'\r\nexport const CHANGE_FILTERS = 'CHANGE_FILTERS'\r\nexport const CHANGE_FILTERS_SUCCESS = 'CHANGE_FILTERS_SUCCESS'\r\nexport const CHANGE_FILTERS_FAIL = 'CHANGE_FILTERS_FAIL'\r\n\r\nexport const getFilters = async ({ filtersContext, data }) => {\r\n  const { filters, touched } = filtersContext\r\n  let newFilters = Object.create(filters)\r\n  filtersContext.dispatch({\r\n    type: GET_FILTERS\r\n  })\r\n\r\n  _.map(data, ({ providerName, cloudAccount }) => {\r\n    newFilters.providerName[providerName] === undefined\r\n      ? (newFilters.providerName[providerName] = {\r\n          count: 0,\r\n          checked: false,\r\n          name: providerName,\r\n          group: 'providerName'\r\n        })\r\n      : newFilters.providerName[providerName].count++\r\n\r\n    newFilters.cloudAccount[cloudAccount] === undefined\r\n      ? (newFilters.cloudAccount[cloudAccount] = {\r\n          count: 0,\r\n          checked: false,\r\n          name: cloudAccount,\r\n          group: 'cloudAccount'\r\n        })\r\n      : newFilters.cloudAccount[cloudAccount].count++\r\n  })\r\n  console.log(filters, newFilters)\r\n  try {\r\n    if (!touched) {\r\n      console.log('aici')\r\n      filtersContext.dispatch({\r\n        type: GET_FILTERS_SUCCESS,\r\n        payload: newFilters\r\n      })\r\n    } else {\r\n      throw new Error('Filters already initialized')\r\n    }\r\n  } catch (err) {\r\n    const errors = _.get(err, 'message')\r\n    filtersContext.dispatch({\r\n      type: GET_FILTERS_FAIL\r\n    })\r\n  }\r\n}\r\n\r\nexport const changeFilters = ({ filtersContext, fetchFunction, name, group, value }) => {\r\n  let { filters } = filtersContext\r\n  filtersContext.dispatch({\r\n    type: CHANGE_FILTERS\r\n  })\r\n  try {\r\n    filters[group][name].checked = value\r\n    filtersContext.dispatch({\r\n      type: CHANGE_FILTERS_SUCCESS,\r\n      payload: filters\r\n    })\r\n    if (fetchFunction) {\r\n      fetchFunction(filters)\r\n    }\r\n  } catch (err) {\r\n    const errors = _.get(err, 'message')\r\n    filtersContext.dispatch({\r\n      type: CHANGE_FILTERS_FAIL\r\n    })\r\n  }\r\n}\r\n\r\nexport const changeAllFilters = ({ filtersContext, fetchFunction, group, value }) => {\r\n  let { filters } = filtersContext\r\n  filtersContext.dispatch({\r\n    type: CHANGE_FILTERS\r\n  })\r\n  try {\r\n    _.map(filters[group], (item, name) => {\r\n      filters[group][name].checked = value\r\n    })\r\n    filtersContext.dispatch({\r\n      type: CHANGE_FILTERS_SUCCESS,\r\n      payload: filters\r\n    })\r\n    if (fetchFunction) {\r\n      fetchFunction(filters)\r\n    }\r\n  } catch (err) {\r\n    const errors = _.get(err, 'message')\r\n    filtersContext.dispatch({\r\n      type: CHANGE_FILTERS_FAIL\r\n    })\r\n  }\r\n}\r\n","import { generateContext } from '../../helpers'\r\nimport {\r\n  CHANGE_FILTERS,\r\n  CHANGE_FILTERS_FAIL,\r\n  CHANGE_FILTERS_SUCCESS,\r\n  GET_FILTERS,\r\n  GET_FILTERS_FAIL,\r\n  GET_FILTERS_SUCCESS,\r\n} from './filters-actions'\r\n\r\nconst initialState = {\r\n  filters: {\r\n    providerName: {},\r\n    cloudAccount: {}\r\n  },\r\n  touched: false,\r\n  loading: false,\r\n  error: undefined\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case GET_FILTERS:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case GET_FILTERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        touched: true,\r\n        filters: action.payload\r\n      }\r\n    case GET_FILTERS_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n    case CHANGE_FILTERS:\r\n      return {\r\n        ...state\r\n      }\r\n    case CHANGE_FILTERS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        filters: action.payload\r\n      }\r\n    case CHANGE_FILTERS_FAIL:\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst { Context, ContextProvider } = generateContext(initialState, reducer)\r\nexport const FiltersContext = Context\r\nexport const FiltersContextProvider = ContextProvider\r\n","export const API_URL = 'https://my-json-server.typicode.com/gceico/accordion-filter'","import Axios from 'axios'\r\nimport _ from 'lodash'\r\n\r\nimport { API_URL } from '../../config'\r\nimport { encodeFilters } from '../../helpers'\r\n\r\nexport const GET_HISTORY = 'GET_HISTORY'\r\nexport const GET_HISTORY_SUCCESS = 'GET_HISTORY_SUCCESS'\r\nexport const GET_HISTORY_FAIL = 'GET_HISTORY_FAIL'\r\nexport const DELETE_HISTORY = 'DELETE_HISTORY'\r\nexport const DELETE_HISTORY_SUCCESS = 'DELETE_HISTORY_SUCCESS'\r\nexport const DELETE_HISTORY_FAIL = 'DELETE_HISTORY_FAIL'\r\n\r\nexport const getHistory = async ({ historyContext, filters }) => {\r\n  const query = encodeFilters(filters)\r\n  let response\r\n  historyContext.dispatch({\r\n    type: GET_HISTORY\r\n  })\r\n  try {\r\n    response = await Axios({\r\n      url: `${API_URL}/history?${query}`,\r\n      method: 'get'\r\n    })\r\n    historyContext.dispatch({\r\n      type: GET_HISTORY_SUCCESS,\r\n      payload: response.data\r\n    })\r\n  } catch (err) {\r\n    const error = _.get(err, 'response.data.errors')\r\n    historyContext.dispatch({\r\n      type: GET_HISTORY_FAIL,\r\n      payload: error\r\n    })\r\n  }\r\n}\r\nexport const deleteHistory = async ({ historyContext, id }) => {\r\n  const { history } = historyContext\r\n  let response\r\n  historyContext.dispatch({\r\n    type: DELETE_HISTORY\r\n  })\r\n  try {\r\n    response = await Axios({\r\n      url: `${API_URL}/history/${id}`,\r\n      method: 'delete'\r\n    })\r\n    const newHistory = _.filter(history, item => item.id !== id)\r\n    historyContext.dispatch({\r\n      type: DELETE_HISTORY_SUCCESS,\r\n      payload: newHistory\r\n    })\r\n  } catch (err) {\r\n    const error = _.get(err, 'response.data.errors')\r\n    historyContext.dispatch({\r\n      type: DELETE_HISTORY_FAIL,\r\n      payload: error\r\n    })\r\n  }\r\n}\r\n","import { generateContext } from '../../helpers'\r\nimport {\r\n  DELETE_HISTORY,\r\n  DELETE_HISTORY_FAIL,\r\n  DELETE_HISTORY_SUCCESS,\r\n  GET_HISTORY,\r\n  GET_HISTORY_FAIL,\r\n  GET_HISTORY_SUCCESS,\r\n} from './history-actions'\r\n\r\nconst initialState = {\r\n  history: [],\r\n  deleted: {},\r\n  loading: false,\r\n  error: undefined\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case GET_HISTORY:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case GET_HISTORY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        history: action.payload,\r\n        loading: false\r\n      }\r\n    case GET_HISTORY_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload\r\n      }\r\n      case DELETE_HISTORY:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        }\r\n      case DELETE_HISTORY_SUCCESS:\r\n        return {\r\n          ...state,\r\n          loading: false\r\n        }\r\n      case DELETE_HISTORY_FAIL:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          error: action.payload\r\n        }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst { Context, ContextProvider } = generateContext(initialState, reducer)\r\nexport const HistoryContext = Context\r\nexport const HistoryContextProvider = ContextProvider\r\n","import {\r\n  Button,\r\n  Checkbox,\r\n  ExpansionPanel,\r\n  ExpansionPanelDetails,\r\n  ExpansionPanelSummary,\r\n  FormControlLabel,\r\n  Icon,\r\n  TextField,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport _ from 'lodash'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { changeAllFilters, changeFilters, getFilters } from '../filters-actions'\r\nimport { FiltersContext } from '../filters-context'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(16),\r\n    alignSelf: 'center'\r\n  },\r\n  groupCheckbox: {\r\n    marginLeft: 'auto'\r\n  },\r\n  groupExpansion: {\r\n    flexDirection: 'column'\r\n  },\r\n  toggleButton: {\r\n    width: 'fit-content'\r\n  },\r\n  searchField: {\r\n    width: 200,\r\n    margin: 0\r\n  }\r\n}))\r\n\r\nconst initialState = {\r\n  filterProvider: true,\r\n  filterAccount: true\r\n}\r\n\r\nexport default function Filters({ data, fetchFunction }) {\r\n  const [expanded, setExpanded] = useState(initialState)\r\n  const filtersContext = useContext(FiltersContext)\r\n  const {\r\n    loading,\r\n    filters: { providerName, cloudAccount }\r\n  } = filtersContext\r\n\r\n  useEffect(() => {\r\n    getFilters({ filtersContext, data })\r\n  }, [data])\r\n\r\n  const handleExpansion = panel => (event, isExpanded) => {\r\n    setExpanded(\r\n      isExpanded ? { ...expanded, [panel]: true } : { ...expanded, [panel]: false }\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ExpansionPanel\r\n        expanded={expanded.filterProvider}\r\n        onChange={handleExpansion('filterProvider')}\r\n      >\r\n        <FilterGroup\r\n          group={providerName}\r\n          groupName={'providerName'}\r\n          fetchFunction={fetchFunction}\r\n        />\r\n      </ExpansionPanel>\r\n      <ExpansionPanel\r\n        expanded={expanded.filterAccount}\r\n        onChange={handleExpansion('filterAccount')}\r\n      >\r\n        <FilterGroup\r\n          group={cloudAccount}\r\n          groupName={'cloudAccount'}\r\n          fetchFunction={fetchFunction}\r\n          maxFilters={3}\r\n          withSearch={true}\r\n        />\r\n      </ExpansionPanel>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction FilterGroup({ group, groupName, fetchFunction, maxFilters, withSearch }) {\r\n  const classes = useStyles()\r\n  const [limit, setLimit] = useState(maxFilters)\r\n  const [searchedText, setSearchedText] = useState('')\r\n  const [filtersGroup, setFiltersGroup] = useState(group)\r\n  const filtersContext = useContext(FiltersContext)\r\n  const { filters } = filtersContext\r\n  let allChecked = true\r\n  _.map(group, filter => {\r\n    if (!filter.checked) {\r\n      allChecked = false\r\n    }\r\n  })\r\n  const handleCheckAll = (event, isChecked) => {\r\n    changeAllFilters({\r\n      filtersContext,\r\n      group: groupName,\r\n      value: isChecked,\r\n      fetchFunction\r\n    })\r\n  }\r\n\r\n  const handleSearch = (event, value) => {\r\n    const searchFor = _.get(event, 'target.value')\r\n    if (searchFor) {\r\n      setFiltersGroup(\r\n        _.pickBy(group, elem =>\r\n          _.includes(elem.name.toLowerCase(), searchFor.toLowerCase())\r\n        )\r\n      )\r\n    } else {\r\n      setFiltersGroup(group)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ExpansionPanelSummary expandIcon={<Icon>expand_more</Icon>}>\r\n        <Typography className={classes.heading}>Cloud provider</Typography>\r\n        <FormControlLabel\r\n          onClick={event => event.stopPropagation()}\r\n          onFocus={event => event.stopPropagation()}\r\n          checked={allChecked}\r\n          onChange={handleCheckAll}\r\n          className={classes.groupCheckbox}\r\n          control={<Checkbox />}\r\n          label={`All (${_.size(group)})`}\r\n        />\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails className={classes.groupExpansion}>\r\n        {withSearch && (\r\n          <TextField\r\n            label='Search filters'\r\n            type='search'\r\n            variant='outlined'\r\n            className={classes.searchField}\r\n            margin='normal'\r\n            onChange={handleSearch}\r\n          />\r\n        )}\r\n        {limit\r\n          ? _.map(_.values(filtersGroup).slice(0, limit), (filter, key) => (\r\n              <FilterItem {...filter} fetchFunction={fetchFunction} key={key} />\r\n            ))\r\n          : _.map(_.values(filtersGroup), (filter, key) => (\r\n              <FilterItem {...filter} fetchFunction={fetchFunction} key={key} />\r\n            ))}\r\n        {maxFilters && (\r\n          <Button\r\n            size='small'\r\n            className={classes.toggleButton}\r\n            onClick={() => setLimit(limit ? undefined : maxFilters)}\r\n          >{`${limit ? `Show all(${_.size(group)})` : 'Hide'} `}</Button>\r\n        )}\r\n      </ExpansionPanelDetails>\r\n    </>\r\n  )\r\n}\r\n\r\nfunction FilterItem({ count, checked, name, group, fetchFunction }) {\r\n  const filtersContext = useContext(FiltersContext)\r\n\r\n  const handleCheck = (event, isChecked) => {\r\n    changeFilters({ filtersContext, name, group, value: isChecked, fetchFunction })\r\n  }\r\n\r\n  return (\r\n    <FormControlLabel\r\n      control={<Checkbox checked={checked} onChange={handleCheck} value={name} />}\r\n      label={`${name} (${count})`}\r\n    />\r\n  )\r\n}\r\n","import { Avatar, Icon, IconButton, Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core'\r\nimport _ from 'lodash'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { FiltersContext } from '../../filters/filters-context'\r\nimport Filters from '../../filters/views/filters'\r\nimport { deleteHistory, getHistory } from '../history-actions'\r\nimport { HistoryContext } from '../history-context'\r\n\r\nexport default function HistoryList() {\r\n  const historyContext = useContext(HistoryContext)\r\n  const filtersContext = useContext(FiltersContext)\r\n  const { loading, history } = historyContext\r\n  const {filters} = filtersContext\r\n  useEffect(() => {\r\n    getHistory({ historyContext, filters })\r\n  }, [])\r\n\r\n  const handleDelete = id => {\r\n    deleteHistory({ historyContext, id })\r\n  }\r\n\r\n  if (loading) {\r\n    return <div>loading...</div>\r\n  }\r\n  return (\r\n    <>\r\n      <Filters\r\n        data={history}\r\n        fetchFunction={filters => getHistory({ historyContext, filters })}\r\n      />\r\n      <Table aria-label='simple table'>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Picture</TableCell>\r\n            <TableCell>Provider</TableCell>\r\n            <TableCell>Account</TableCell>\r\n            <TableCell>Region</TableCell>\r\n            <TableCell>Result</TableCell>\r\n            <TableCell>Run By</TableCell>\r\n            <TableCell>Created At</TableCell>\r\n            <TableCell>Finished At</TableCell>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Actions</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {_.map(history, item => (\r\n            <TableRow key={item.id}>\r\n              <TableCell>\r\n                <Avatar variant='square' src={item.picture} />\r\n              </TableCell>\r\n              <TableCell>{item.providerName}</TableCell>\r\n              <TableCell>{item.cloudAccount}</TableCell>\r\n              <TableCell>{item.region}</TableCell>\r\n              <TableCell>{item.result}</TableCell>\r\n              <TableCell>{item.runBy}</TableCell>\r\n              <TableCell>{item.createdAt}</TableCell>\r\n              <TableCell>{item.finishedAt}</TableCell>\r\n              <TableCell>{item.name}</TableCell>\r\n              <TableCell>\r\n                <IconButton\r\n                  color='secondary'\r\n                  component='span'\r\n                  onClick={() => handleDelete(item.id)}\r\n                >\r\n                  <Icon>delete_forever</Icon>\r\n                </IconButton>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\n\nimport { FiltersContextProvider } from './modules/filters/filters-context'\nimport { HistoryContextProvider } from './modules/history/history-context'\nimport HistoryList from './modules/history/views/history-list'\n\nfunction App() {\n  return (\n    <HistoryContextProvider>\n      <FiltersContextProvider>\n        <HistoryList />\n      </FiltersContextProvider>\n    </HistoryContextProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}